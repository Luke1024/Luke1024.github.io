{"version":3,"sources":["./src/environments/environment.ts","./src/app/main-view/main-view.component.ts","./src/app/main-view/main-view.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/intro/intro.component.ts","./src/app/message-service.service.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/card-block/card-block.component.ts","./src/app/card-block/card-block.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MessageServiceService } from '../message-service.service';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.css']\n})\nexport class MainViewComponent implements OnInit {\n\n  constructor(private messageService:MessageServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-card-block></app-card-block>\n","import { Component } from '@angular/core';\nimport { MessageServiceService } from './message-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'developer-page';\n\n  constructor(private messageService:MessageServiceService) {\n\n  }\n\n  ngOnInit(): void {\n    this.messageService.getToken()\n  }\n\n  send(code:string){\n    this.messageService.send(code)\n  }\n}\n","<div id=\"bl1\">\r\n    <div style=\"margin:auto; width:80rem; position: relative; top:300px;\">\r\n        <h1 style=\"text-align: center;\">Łukasz Chajdaś</h1>\r\n        <h2 style=\"text-align: center;\">Junior full-stack developer.</h2>\r\n    </div>\r\n</div>\r\n<div id=\"bl2\">\r\n    <div style=\"text-align: center; margin:auto; width: 80rem; position: relative; top:2rem;\">\r\n        <div style=\"text-decoration: underline;\"><h2>Skills:</h2></div>\r\n    </div>\r\n    <div style=\"margin: auto; width: 80rem;\">\r\n        <div style=\"margin:auto; width:40rem; position:relative; top:5rem; left:1rem;\">\r\n            <p><ngb-progressbar [value]=\"65\" height=\"2rem\"></ngb-progressbar></p>\r\n            <p><ngb-progressbar [value]=\"55\" height=\"2rem\"></ngb-progressbar></p>\r\n            <p><ngb-progressbar [value]=\"50\" height=\"2rem\"></ngb-progressbar></p>\r\n            <p><ngb-progressbar [value]=\"45\" height=\"2rem\"></ngb-progressbar></p>\r\n            <p><ngb-progressbar [value]=\"40\" height=\"2rem\"></ngb-progressbar></p>\r\n            <p><ngb-progressbar [value]=\"40\" height=\"2rem\"></ngb-progressbar></p>\r\n            <p><ngb-progressbar [value]=\"35\" height=\"2rem\"></ngb-progressbar></p>\r\n        </div>\r\n        <div style=\"line-height: 3rem; position: relative; top:-16.5rem; right: 60rem; text-align: right; font-size: 1.8rem;\">\r\n            <p>Java<br>Spring Boot<br>Angular<br>Typescript<br>HTML<br>CSS<br>SQL</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div style=\"margin:auto; width: 80rem;\">\r\n    <div style=\"text-align: center; color:white; margin-top: 2rem; text-decoration: underline;\"><h2>Projects</h2></div>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div class=\"card bg-dark shadow text-white myCard\">\r\n                <img src=\"assets/images/img1.png\" class=\"card-img-top\">\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">TodoApp</h4>\r\n                    <p class=\"card-text\" style=\"overflow: auto;\">This is the simplest application that I was able to use to learn proper full-stack development. When I started this app I knew nothing about front-end development so started from vanilla js. I quickly learned that programming client with vanilla js is quite pointless and moved to jquery. Jquery code quickly became quite chaotic. I was aware then that newer frameworks structure code better so I moved to Angular with typescript as the ultimate solution. This was an interesting course in the history of evolution in front-end development for me.</p>\r\n                </div>\r\n                <div class=\"myIconGroup\">\r\n                    <img src=\"assets/images/angular.png\" style=\"width: 340px; height: 170px;\" id=\"ang\">\r\n                    <img src=\"assets/images/spring_boot.png\" style=\"width: 350px; height: 150px;\" id=\"spr\">\r\n                </div>\r\n                <div class=\"myButtonGroup\">\r\n                    <div class=\"mb-3\">\r\n                        <a class=\"btn btn-outline-danger myButton\" href=\"https://morning-coast-72770.herokuapp.com/\" target=\"_blank\" (click)=\"send('ToDo Hero')\">Open app on Heroku</a>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <a class=\"btn btn-outline-success myButton\" href=\"https://github.com/Luke1024/ToDo_fullStackApp\" target=\"_blank\" (click)=\"send('ToDo Git')\">Go to project github repository</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col\">\r\n            <div class=\"card bg-dark shadow text-white myCard\">\r\n                <div>\r\n                <ngb-carousel [interval]=\"5000\" [showNavigationArrows]=\"false\" [showNavigationIndicators]=\"false\" [pauseOnHover]=\"false\">\r\n                    <ng-template ngbSlide>\r\n                      <div class=\"picsum-img-wrapper\">\r\n                        <img src=\"assets/images/img2.bmp\" class=\"d-block w-100\" alt=\"Random first slide\">\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template ngbSlide>\r\n                      <div class=\"picsum-img-wrapper\">\r\n                        <img src=\"assets/images/img3.bmp\" class=\"d-block w-100\" alt=\"Random second slide\">\r\n                      </div>\r\n                    </ng-template>\r\n                </ngb-carousel>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">TradingApp</h4>\r\n                    <p class=\"card-text\" style=\"overflow: auto;\">This app is my earlier project (<a href=\"https://github.com/Luke1024/financial-analytics\">https://github.com/Luke1024/financial-analytics</a>) extremely simplified to actually make it possible to finish it in a reasonable time (or finish at all) and show it as a portfolio project. The idea for this app came to me naturally because I was engaged in trading earlier in my career.\r\n                    This app can simulate trading on the forex market on EUR/USD currency pair. App using external API to update EUR/USD exchange rate in real-time every 5 minutes (limits of free API) and using this data to compute profits and balance of accounts created by a user.</p>\r\n                </div>\r\n                <div class=\"myIconGroup\">\r\n                    <img src=\"assets/images/angular.png\" style=\"width: 340px; height: 170px;\" id=\"ang\">\r\n                    <img src=\"assets/images/spring_boot.png\" style=\"width: 350px; height: 150px;\" id=\"spr\">\r\n                </div>\r\n                <div class=\"myButtonGroup\">\r\n                    <div class=\"mb-3\">\r\n                        <a class=\"btn btn-outline-danger myButton\" href=\"https://protected-stream-68029.herokuapp.com/\" target=\"_blank\" (click)=\"send('Trade Hero')\">Open app on Heroku</a>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <a class=\"btn btn-outline-success myButton\" href=\"https://github.com/Luke1024/TradingApp\" target=\"_blank\" (click)=\"send('Trade Git')\">Go to project github repository</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"bl3\">\r\n    <div style=\"text-align: center; margin:auto; width: 80rem; position: relative; top:2rem;\">\r\n        <div style=\"text-decoration: underline;\"><h2>Contact</h2></div>\r\n        <div><a href=\"mailto: chajdas.lukasz@gmail.com\" style=\"color: whitesmoke; font-size: large;\">chajdas.lukasz@gmail.com</a></div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './card/card.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CardBlockComponent } from './card-block/card-block.component';\nimport { MainViewComponent } from './main-view/main-view.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { IntroComponent } from './intro/intro.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    CardBlockComponent,\n    MainViewComponent,\n    IntroComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-intro',\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.css']\n})\nexport class IntroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ThrowStmt } from '@angular/compiler';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { PulseDto } from './models/pulse-dto';\nimport { StringDto } from './models/string-dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageServiceService {\n\n  private pingingIntervalInSeconds = 30;\n\n  private storageKey = \"local_token\"\n\n  private token = \"\"\n\n  private rootUrl = \"https://murmuring-caverns-97353.herokuapp.com/input\"\n  private tokenUrl = this.rootUrl + \"/token\"\n  private pulseUrl = this.rootUrl + \"/load\"\n\n  private operationsStorage:string[] = []\n\n  constructor(private http:HttpClient) { }\n\n  public getToken() {\n    this.runTimer()\n    var token = localStorage.getItem(this.storageKey);\n    if(token == null){\n        this.http.get<StringDto>(this.tokenUrl, {observe:'response'})\n        .pipe(catchError(this.handleError<StringDto>(\"get token\")))\n        .subscribe(token => {\n          this.setToken(token);\n        })\n    } else {\n        this.token = token;\n    }\n  }\n\n  private runTimer(){\n    setInterval(() => {\n      this.pingingIntervalInSeconds--;\n      if(this.pingingIntervalInSeconds==0){\n        this.send(\"ping\")\n      }\n    },1000)\n  }\n\n  public send(code:string){\n    this.pingingIntervalInSeconds = 30;\n    this.operationsStorage.push(code)\n    this.sendMessage()\n  }\n\n  public sendMessage(){\n    if(this.operationsStorage.length > 0){\n      if(this.isTokenActive()){\n        var code = this.operationsStorage.shift();\n        this.postMessage(code as string).subscribe(response => {\n          if(response){\n            this.sendMessage()\n          } else {\n            this.operationsStorage.unshift(code as string)\n            console.log(\"problem with message sending\")\n          }\n        });\n      }\n  }\n  }\n\n  private isTokenActive(){\n    return this.token.length == 15;\n  }\n\n  private postMessage(code:string):Observable<boolean>{\n    var pulse = {token:this.token, code:code} as PulseDto\n    return this.http.post<boolean>(this.pulseUrl, pulse)\n  }\n\n  private setToken(response:any){\n    if(response != null){\n        var status = response.status\n        if(response.body != null){\n          if(status==200){\n            if(response.body?.message != null){\n                console.log(\"Setting token \" + response.body.message)\n                this.token = response.body.message\n                localStorage.setItem(this.storageKey, this.token)\n                this.sendMessage()\n            }\n          }\n        }\n    }\n}\n  \n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error); \n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n  \n  private log(message: string) {\n\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { getTokenSourceMapRange } from 'typescript';\nimport { StringDto } from '../models/string-dto';\nimport { catchError } from \"rxjs/operators\"\nimport { PulseDto } from '../models/pulse-dto';\nimport { MessageServiceService } from '../message-service.service';\nimport { Card } from '../models/card';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() card:Card = {} as Card\n\n  constructor(private messageService:MessageServiceService) { }\n\n  ngOnInit(): void {}\n\n  send(code:string) {\n    this.messageService.send(this.card.title + ' ' + code)\n  }\n}\n","<div class=\"card m-3 text-white bg-dark shadow\">\n  <img src={{card.img}} class=\"card-img-top\">\n    <div class=\"card-body\">\n      <p class=\"card-title\">{{card.title}}</p>\n      <p class=\"card-text\">{{card.text}}</p>\n      <div class=\"mb-3\">\n          <a class=\"btn btn-outline-primary\" href=\"{{card.app}}\" target=\"_blank\" (click)=\"send('app')\">Open app on Heroku</a>\n      </div>\n      <div class=\"mb-3\">\n          <a class=\"btn btn-outline-primary\" href=\"{{card.repo}}\" target=\"_blank\" (click)=\"send('repo')\">Go to project github repository</a>\n      </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Card } from '../models/card';\n\n@Component({\n  selector: 'app-card-block',\n  templateUrl: './card-block.component.html',\n  styleUrls: ['./card-block.component.css']\n})\nexport class CardBlockComponent implements OnInit {\n\n  cards:Card[] = [{\n    title:\"ToDoApp\",\n    text:\"This is the simplest application that I was able to use to learn proper full-stack development. When I started this app I knew nothing about front-end development so started from vanilla js. I quickly learned that programming client with vanilla js is quite pointless and moved to jquery. Jquery code quickly became quite chaotic. I was aware then that better frameworks structure code better so I moved to Angular with typescript as the ultimate solution. This was an interesting course in the history of evolution in front-end development for me.\",\n    img:\"assets/images/img1.png\",\n    app:\"https://morning-coast-72770.herokuapp.com/\",\n    repo:\"https://github.com/Luke1024/ToDo_fullStackApp\"},\n    {\n      title:\"TradingApp\",\n      text:\"This app is my earlier project '<a href='https://github.com/Luke1024/financial-analytics'>https://github.com/Luke1024/financial-analytics</a>' extremely simplified to actually make it possible to finish it in a reasonable time (or finish at all) and show it as a portfolio project. The idea for this app came to me naturally because I was engaged in trading earlier in my career. This app can simulate trading on the forex market on EUR/USD currency pair. App using external API to update EUR/USD exchange rate in real-time every 5 minutes (limits of free API) and using this data to compute profits and balance of accounts created by a user.\",\n      img:\"assets/images/img2.bmp\",\n      app:\"https://protected-stream-68029.herokuapp.com/\",\n      repo:\"https://github.com/Luke1024/ToDo_fullStackApp\"}]\n\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"margin:auto; min-width: 800px; max-width: 1280px;\">\n    <div class=\"row\">\n        <div class=\"col\" *ngFor=\"let card of cards\">\n            <app-card [card]=\"card\"></app-card>\n        </div>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}