{"version":3,"sources":["./src/app/message-service/sub-services/action.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/main-modal/main-modal.component.ts","./src/app/main-modal/main-modal.component.html","./src/environments/environment.ts","./src/app/message-service/sub-services/contact.service.ts","./src/app/main-view/main-view.component.ts","./src/app/main-view/main-view.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/intro/intro.component.ts","./src/app/intro/intro.component.html","./src/app/card-modal/card-modal.component.ts","./src/app/card-modal/card-modal.component.html","./src/app/about/card-circular-bar/bar/bar.component.ts","./src/app/about/card-circular-bar/bar/bar.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/message-service/message-service.service.ts","./src/app/about/card-circular-bar/card-circular-bar.component.ts","./src/app/about/card-circular-bar/card-circular-bar.component.html","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/card-block/card-block.component.ts","./src/app/card-block/card-block.component.html","./src/app/message-service/sub-services/url.service.ts","./src/main.ts","./src/app/message-service/sub-services/token.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ViewportScroller } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { PulseDto } from 'src/app/models/pulse-dto';\nimport { TokenStatus } from '../message-models/token-status';\nimport { UrlService } from './url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionService {\n\n  serviceStatus = new Subject<boolean>();\n\n  private actionBatchSendEverySeconds = 5;\n  private actionTimerValue = this.actionBatchSendEverySeconds;\n\n  private operationsStorage:string[] = [];\n  private tokenStatus:TokenStatus = {status:false, token:\"\"};\n\n  constructor(private http:HttpClient, private url:UrlService) {}\n\n  start() {\n    this.runBatchTimer()\n  }\n\n  public send(code:string) {\n    let now = new Date();\n    let action = \"T:\" + now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds() + \":\" + now.getMilliseconds() +\n     \" S:\" + window.scrollY.toFixed(0) + \" V:\" + window.innerWidth.toFixed(0) + \":\" + window.innerHeight.toFixed(0) + \" C:\" + code;\n    this.operationsStorage.push(action);\n    console.log(this.operationsStorage.length);\n  }\n\n  public setTokenStatus(tokenStatus:TokenStatus){\n    this.tokenStatus = tokenStatus;\n  }\n\n  private runBatchTimer(){\n    setInterval(() => {\n      this.actionTimerValue--;\n      if(this.actionTimerValue==0){\n        this.actionTimerValue = this.actionBatchSendEverySeconds;\n        this.sendMessagesInBufor();\n      }\n    },1000)    \n  }\n\n  public sendMessagesInBufor(){\n    if(this.isTokenActive()){\n      this.postMessage(this.operationsStorage).subscribe(response => {\n        if(this.analyzeResponse(response)){\n          this.operationsStorage = [];\n          this.serviceStatus.next(true);\n        } else {\n          console.log(\"problem with action sending, trying to reload token...\");\n          this.tokenStatus.status = false; // self blocking\n          this.serviceStatus.next(false);\n        }\n      });\n    }\n  }\n\n  private analyzeResponse(response:any):boolean {\n    if(response != null){\n      if(response.status==200){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isTokenActive(){\n    return this.tokenStatus.status;\n  }\n\n  private postMessage(code:string[]):Observable<any>{\n    var pulse = {token:this.tokenStatus.token, actions:code} as PulseDto\n    return this.http.post<boolean>(this.url.pulseUrl, pulse, {observe:'response'}).pipe(catchError(this.handleError(\"post action data\")));\n  }\n  \n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error + ` ${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n","import { ViewportScroller } from '@angular/common';\r\nimport { Component, HostListener, OnInit } from '@angular/core';\r\nimport { MessageServiceService } from '../message-service/message-service.service';\r\nimport { BarConfig } from './bar-config';\r\nimport { CardConfig } from './card-config';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  private innerHeight = 0;\r\n  private scrollPosition = 0;\r\n  private animationOff:boolean = true;\r\n\r\n  constructor(private messengerService:MessageServiceService, private scroller:ViewportScroller) { }\r\n\r\n  ngOnInit(): void {\r\n    this.innerHeight = window.innerHeight;    \r\n    this.checkPosition();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize() {\r\n    this.innerHeight = window.innerHeight;\r\n    this.checkPosition();\r\n  }\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  onScroll() {\r\n    this.scrollPosition = this.scroller.getScrollPosition()[1];\r\n    this.checkPosition();\r\n  }\r\n\r\n  private checkPosition(){\r\n    if(this.animationOff){\r\n      if((this.innerHeight + this.scrollPosition) > 1350){\r\n        this.cards.push(this.java, this.springBoot, this.angular,\r\n          this.typeScript, this.css, this.html, this.sql);\r\n          this.animationOff = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  cards:CardConfig[] = []\r\n\r\n  java = {\r\n    description: \"Java\",\r\n    textColor: \"orange\",\r\n    cardColor: \"rgb(40,40,40)\",\r\n    descriptionBlurAnimeDelay: \"1s\",\r\n    descriptionBlurAnimeDuration: \"2s\",\r\n    cardAnimeDelay: \"0s\",\r\n    cardAnimeDuration: \"2s\",\r\n    barConfig:{\r\n      percentage:65,\r\n      animationTimeS:2,\r\n      animationDelay:0,\r\n      centerColor:\"rgb(150,150,150)\",\r\n      barColor:\"rgb(179, 116, 0)\",\r\n      progressTextColor:\"rgba(0,0,0,0.8)\",\r\n      backgroundColor:\"rgb(40,40,40)\",\r\n      fadeInTimeS:2,\r\n      fadeInDelayS:1\r\n    } as BarConfig,\r\n  }  as CardConfig;\r\n\r\n  springBoot = {\r\n    description: \"Spring Boot\",\r\n    textColor: \"green\",\r\n    cardColor: \"rgb(40,40,40)\",\r\n    descriptionBlurAnimeDelay: \"1.2s\",\r\n    descriptionBlurAnimeDuration: \"2s\",\r\n    cardAnimeDelay: \"0.2s\",\r\n    cardAnimeDuration: \"2s\",\r\n    barConfig:{\r\n      percentage:55,\r\n      animationTimeS:2,\r\n      animationDelay:0.2,\r\n      centerColor:\"rgb(150,150,150)\",\r\n      barColor:\"green\",\r\n      progressTextColor:\"rgba(0,0,0,0.8)\",\r\n      backgroundColor:\"rgb(40,40,40)\",\r\n      fadeInTimeS:2,\r\n      fadeInDelayS:1.2\r\n    } as BarConfig,\r\n  }  as CardConfig;\r\n\r\n  angular = {\r\n    description: \"Angular\",\r\n    textColor: \"red\",\r\n    cardColor: \"rgb(40,40,40)\",\r\n    descriptionBlurAnimeDelay: \"1.4s\",\r\n    descriptionBlurAnimeDuration: \"2s\",\r\n    cardAnimeDelay: \"0.4s\",\r\n    cardAnimeDuration: \"2s\",\r\n    barConfig:{\r\n      percentage:50,\r\n      animationTimeS:2,\r\n      animationDelay:0.4,\r\n      centerColor:\"rgb(150,150,150)\",\r\n      barColor:\"red\",\r\n      progressTextColor:\"rgba(0,0,0,0.8)\",\r\n      backgroundColor:\"rgb(40,40,40)\",\r\n      fadeInTimeS:2,\r\n      fadeInDelayS:1.4\r\n    } as BarConfig,\r\n  }  as CardConfig;\r\n\r\n  typeScript = {\r\n    description: \"TypeScript\",\r\n    textColor: \"blue\",\r\n    cardColor: \"rgb(40,40,40)\",\r\n    descriptionBlurAnimeDelay: \"1.6s\",\r\n    descriptionBlurAnimeDuration: \"2s\",\r\n    cardAnimeDelay: \"0.6s\",\r\n    cardAnimeDuration: \"2s\",\r\n    barConfig:{\r\n      percentage:45,\r\n      animationTimeS:2,\r\n      animationDelay:0.6,\r\n      centerColor:\"rgb(150,150,150)\",\r\n      barColor:\"blue\",\r\n      progressTextColor:\"rgba(0,0,0,0.8)\",\r\n      backgroundColor:\"rgb(40,40,40)\",\r\n      fadeInTimeS:2,\r\n      fadeInDelayS:1.6\r\n    } as BarConfig,\r\n  }  as CardConfig;\r\n\r\n  css = {\r\n    description: \"CSS\",\r\n    textColor: \"blue\",\r\n    cardColor: \"rgb(40,40,40)\",\r\n    descriptionBlurAnimeDelay: \"1.8s\",\r\n    descriptionBlurAnimeDuration: \"2s\",\r\n    cardAnimeDelay: \"0.8s\",\r\n    cardAnimeDuration: \"2s\",\r\n    barConfig:{\r\n      percentage:40,\r\n      animationTimeS:2,\r\n      animationDelay:0.8,\r\n      centerColor:\"rgb(150,150,150)\",\r\n      barColor:\"blue\",\r\n      progressTextColor:\"rgba(0,0,0,0.8)\",\r\n      backgroundColor:\"rgb(40,40,40)\",\r\n      fadeInTimeS:2,\r\n      fadeInDelayS:1.8\r\n    } as BarConfig,\r\n  }  as CardConfig;\r\n\r\n  html = {\r\n    description: \"HTML\",\r\n    textColor: \"red\",\r\n    cardColor: \"rgb(40,40,40)\",\r\n    descriptionBlurAnimeDelay: \"2s\",\r\n    descriptionBlurAnimeDuration: \"2s\",\r\n    cardAnimeDelay: \"1s\",\r\n    cardAnimeDuration: \"2s\",\r\n    barConfig:{\r\n      percentage:40,\r\n      animationTimeS:2,\r\n      animationDelay:1,\r\n      centerColor:\"rgb(150,150,150)\",\r\n      barColor:\"red\",\r\n      progressTextColor:\"rgba(0,0,0,0.8)\",\r\n      backgroundColor:\"rgb(40,40,40)\",\r\n      fadeInTimeS:2,\r\n      fadeInDelayS:2\r\n    } as BarConfig,\r\n  }  as CardConfig;\r\n\r\n  sql = {\r\n    description: \"SQL\",\r\n    textColor: \"blue\",\r\n    cardColor: \"rgb(40,40,40)\",\r\n    descriptionBlurAnimeDelay: \"2.2s\",\r\n    descriptionBlurAnimeDuration: \"2s\",\r\n    cardAnimeDelay: \"1.2s\",\r\n    cardAnimeDuration: \"2s\",\r\n    barConfig:{\r\n      percentage:35,\r\n      animationTimeS:2,\r\n      animationDelay:1.2,\r\n      centerColor:\"rgb(150,150,150)\",\r\n      barColor:\"blue\",\r\n      progressTextColor:\"rgba(0,0,0,0.8)\",\r\n      backgroundColor:\"rgb(40,40,40)\",\r\n      fadeInTimeS:2,\r\n      fadeInDelayS:2.2,\r\n    } as BarConfig,\r\n  }  as CardConfig;\r\n\r\n  send() {\r\n    this.messengerService.send(\"about hover\");\r\n  }\r\n}\r\n","<div id=\"background\" (mouseenter)=send()>\r\n<div id=\"block\">\r\n    <div id=\"skills\">\r\n        <div><h2>Skills:</h2></div>\r\n    </div>\r\n    <div class=\"container\" id=\"container\">  \r\n        <div class=\"row\">\r\n            <div *ngFor=\"let card of cards\">\r\n                <app-card-circular-bar id=\"card\" [cardConfig]=\"card\" class=\"column\"></app-card-circular-bar>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n","import { Component, EventEmitter, HostBinding, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { MainModalMessage } from '../models/main-modal-message';\n\n@Component({\n  selector: 'app-main-modal',\n  templateUrl: './main-modal.component.html',\n  styleUrls: ['./main-modal.component.css']\n})\nexport class MainModalComponent implements OnInit {\n\n  @Input() modalMessage:MainModalMessage = {title:\"\", description:\"\"} as MainModalMessage;\n\n  @Output() close = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  closeModal() {\n    this.close.emit();\n  }\n}\n","<div>\n    <div id=\"background\" (click)=\"closeModal()\"></div>\n    <div id=\"modal\">\n        <h2>{{modalMessage.title}}</h2>\n        <p>{{modalMessage.description}}</p>\n        <div id=\"x\" (click)=\"closeModal()\">&#10006;</div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ContactDto } from 'src/app/models/contact-dto';\nimport { TokenStatus } from '../message-models/token-status';\nimport { UrlService } from './url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private tokenStatus:TokenStatus = {status:false, token:\"\"};\n\n  status = new Subject<boolean>()\n\n  constructor(private http:HttpClient, private url:UrlService) { }\n\n    public setTokenStatus(tokenStatus:TokenStatus){\n      this.tokenStatus = tokenStatus;\n    }\n\n    public saveContact(contact:ContactDto):Observable<boolean> {\n      return new Observable(observer => {\n        if(this.isTokenActive()){\n          contact.token = this.tokenStatus.token;\n          this.http.put<boolean>(this.url.contactSaveUrl + \"/\",contact, {observe:'response'})\n          .pipe(catchError(this.handleError(\"post account\"))).subscribe(response => {\n            observer.next(this.analyzeResponse(response));\n          });\n        } else {\n          return Observable.arguments(false);\n        }\n      })\n    }\n\n    private analyzeResponse(response:any):boolean{\n      if(response != null){\n        if(response.status==200){\n          return true;\n        }\n      }\n      return false;\n    }\n\n    private isTokenActive():boolean {\n      return this.tokenStatus.status;\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n      return (error: any): Observable<T> => {\n        console.error(error + ` ${operation} failed: ${error.message}`);\n        return of(result as T);\n    };\n  }\n  }\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { MessageServiceService } from '../message-service/message-service.service';\r\n\r\n@Component({\r\n  selector: 'app-main-view',\r\n  templateUrl: './main-view.component.html',\r\n  styleUrls: ['./main-view.component.css']\r\n})\r\nexport class MainViewComponent implements OnInit {\r\n\r\n  constructor(private messageService:MessageServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"view\">\r\n    <app-navbar id=\"navbar\"></app-navbar>\r\n    <app-intro id=\"intro\"></app-intro>\r\n    <app-about id=\"about\"></app-about>\r\n    <app-card-block id=\"portfolio\"></app-card-block>\r\n    <app-contact id=\"contact\"></app-contact>\r\n</div>","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { MessageServiceService } from './message-service/message-service.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'developer-page';\r\n\r\n  constructor(private message:MessageServiceService) {}\r\n\r\n  ngOnInit(): void {\r\n      this.message.startMessageService();\r\n  }\r\n}\r\n","\r\n<app-main-view></app-main-view>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CardBlockComponent } from './card-block/card-block.component';\r\nimport { MainViewComponent } from './main-view/main-view.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IntroComponent } from './intro/intro.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { BarComponent } from './about/card-circular-bar/bar/bar.component';\r\nimport { CardCircularBarComponent } from './about/card-circular-bar/card-circular-bar.component';\r\nimport { CardComponent } from './card/card.component';\r\nimport { CardModalComponent } from './card-modal/card-modal.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ExtraOptions, RouterModule, Routes } from '@angular/router';\r\nimport { MainModalComponent } from './main-modal/main-modal.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: MainViewComponent\r\n  }\r\n];\r\nconst routerOptions: ExtraOptions = {\r\n  anchorScrolling: \"enabled\"\r\n  //scrollPositionRestoration: \"enabled\"\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CardBlockComponent,\r\n    MainViewComponent,\r\n    IntroComponent,\r\n    AboutComponent,\r\n    ContactComponent,\r\n    BarComponent,\r\n    CardCircularBarComponent,\r\n    CardComponent,\r\n    CardModalComponent,\r\n    NavbarComponent,\r\n    MainModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    RouterModule.forRoot(routes, routerOptions)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\n\r\n\r\n\r\nexport class AppModule { }\r\n","import { Component, HostBinding, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { ContactDto } from '../models/contact-dto';\r\nimport { MessageServiceService } from '../message-service/message-service.service';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { debounceTime} from 'rxjs/operators';\r\nimport { MainModalMessage } from '../models/main-modal-message';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor(private messageService:MessageServiceService) { }\r\n\r\n  isDisabled = false;\r\n  connected = false;\r\n  emailMessage = \"\";\r\n\r\n  contact = {name:\"\", email:\"\", message:\"\"} as ContactDto;\r\n\r\n  @Output() modalMessage = {title:\"\", description:\"\"} as MainModalMessage;\r\n  @HostBinding(\"style.--modal_display\") modal = \"none\";\r\n\r\n  ngOnInit(): void {\r\n    setInterval(() => {\r\n      this.checkConnectedStatus();\r\n    },1000)\r\n  }\r\n\r\n  private checkConnectedStatus() {\r\n    this.connected = this.messageService.tokenStatus.status;\r\n    this.onChange();    \r\n  }\r\n\r\n  onChange() {\r\n    if(this.connected){\r\n      if(this.isEmailOk()){\r\n        this.isDisabled = false;\r\n      } else {    \r\n        this.isDisabled = true;\r\n      }\r\n    } else {\r\n      this.isDisabled = true;\r\n    }\r\n  }\r\n\r\n  private isEmailOk():boolean {\r\n    if(this.contact.email.length > 0){\r\n      if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.contact.email)){\r\n        this.emailMessage = \"\"; \r\n        return true;\r\n      } else {\r\n        this.emailMessage = \"You have entered an invalid email address!\";\r\n      }\r\n    } else {\r\n      this.emailMessage = \"Email is required.\"\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.messageService.saveContact(this.contact).subscribe(response => {\r\n      if(response){\r\n        this.showSuccessResponse();\r\n      } else {\r\n        this.showFailureResponse();\r\n      }\r\n    })    \r\n  }\r\n\r\n  send() {\r\n    this.messageService.send(\"contact hover\");\r\n  }\r\n\r\n  private showSuccessResponse() {\r\n    this.modalMessage.title = \"Message succesfully send.\";\r\n    this.showModal();\r\n  }\r\n\r\n  private showFailureResponse() {\r\n    this.modalMessage.title = \"Message could not be send due to an internal server error.\";\r\n    this.showModal();    \r\n  }\r\n\r\n  private showModal() {\r\n    this.modal = \"initial\";\r\n  }\r\n\r\n  closeModal() {\r\n    this.modal = \"none\";\r\n  }\r\n}","<div id=\"bl3\" (mouseenter)=\"send()\">\r\n    <h2 id=\"contact\">Contact:</h2>\r\n    <div id=\"container\"> \r\n    <div style=\"width: 500px; margin: auto; top:50px; position: relative;\">\r\n        <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"contact.name\" (ngModelChange)=\"onChange()\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"email\" [(ngModel)]=\"contact.email\" (ngModelChange)=\"onChange()\">\r\n            <div *ngIf=\"emailMessage\"\r\n                class=\"alert alert-danger\">{{emailMessage}}</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"message\">Message</label>\r\n            <textarea type=\"text\" rows=\"4\" class=\"form-control\" id=\"message\" [(ngModel)]=\"contact.message\" (ngModelChange)=\"onChange()\"></textarea>\r\n        </div>\r\n        <button id=\"submitbutton\" [disabled]=\"isDisabled\" (click)=\"onSubmit()\">Submit</button>\r\n        <div *ngIf=\"!connected\" style=\"padding: 30px;\">\r\n            <h5>Server is currently unavailable. Try again later or send message directly to:</h5>\r\n            <h3>chajdas.lukasz@gmail.com</h3>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n<app-main-modal id=\"modal\" [modalMessage]=\"modalMessage\" (close)=\"closeModal()\"></app-main-modal>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageServiceService } from '../message-service/message-service.service';\r\n\r\n@Component({\r\n  selector: 'app-intro',\r\n  templateUrl: './intro.component.html',\r\n  styleUrls: ['./intro.component.css']\r\n})\r\nexport class IntroComponent implements OnInit {\r\n\r\n  constructor(private messengerService:MessageServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  send(){\r\n    this.messengerService.send(\"intro hover\");\r\n  }\r\n}\r\n","<div id=\"background\" (mouseenter)=\"send()\">\r\n<div id=\"block\">\r\n    <div id=\"inner\">\r\n        <div id=\"i1\" class=\"inner_anime\"></div>\r\n        <div id=\"i2\" class=\"inner_anime\"></div>\r\n        <div id=\"i3\" class=\"inner_anime\"></div>\r\n        <div id=\"i4\" class=\"inner_anime\"></div>\r\n        <div id=\"i5\" class=\"inner_anime\"></div>\r\n        <div id=\"i6\" class=\"inner_anime\"></div>\r\n        <div id=\"i7\" class=\"inner_anime\"></div>\r\n        <div id=\"i8\" class=\"inner_anime\"></div>\r\n        <div id=\"i9\" class=\"inner_anime\"></div>\r\n        <div id=\"i10\" class=\"inner_anime\"></div>\r\n        <div id=\"inner2\">\r\n            <div id=\"text\">\r\n                <h1 style=\"text-align: center;\">Łukasz Chajdaś</h1>\r\n                <h2 style=\"text-align: center;\">Junior full-stack developer.</h2>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MessageServiceService } from '../message-service/message-service.service';\nimport { Card } from '../models/card';\n\n@Component({\n  selector: 'app-card-modal',\n  templateUrl: './card-modal.component.html',\n  styleUrls: ['./card-modal.component.css']\n})\nexport class CardModalComponent implements OnInit {\n\n  constructor(private messageService:MessageServiceService) { }\n\n  @Input() card = {} as Card;\n  @Output() close = new EventEmitter();\n\n  ngOnInit(): void {\n\n  }\n\n  send(code:string){\n    this.messageService.send(code);\n  }\n\n  closeModal(){\n    this.close.emit();\n  }\n}\n","<div id=\"modal\">\n    <img src=\"{{card.imgUrl}}\" id=\"modal_img\">\n    <img src=\"{{card.img2Url}}\" id=\"modal_img2\">\n    <h2 id=\"modal_title\">{{card.title}}</h2>\n    <p id=\"modal_description\">{{card.description}}</p>\n    <a *ngIf=\"card.appButton\" id=\"modal_bt1\" class=\"btn btn-outline-success myButton\" href={{card.appUrl}} target=\"_blank\" (click)=\"send(card.title + ' hero')\">Open app on Heroku</a>\n    <a id=\"modal_bt2\" class=\"btn btn-outline-danger myButton\" href={{card.repoUrl}} target=\"_blank\" (click)=\"send(card.title + ' git')\">Open github repository</a>\n    <div id=\"x\" (click)=\"closeModal()\">&#10006;</div>\n</div>\n","import { Component, Host, HostBinding, Input, OnInit } from '@angular/core';\r\nimport { BarConfig } from '../../bar-config';\r\n\r\n@Component({\r\n  selector: 'app-bar',\r\n  templateUrl: './bar.component.html',\r\n  styleUrls: ['./bar.component.css']\r\n})\r\nexport class BarComponent implements OnInit {\r\n\r\n  @Input() barConfig:BarConfig = {} as BarConfig;\r\n\r\n  constructor() { }\r\n\r\n  @HostBinding(\"style.--leftrotation\") leftrotation:string = \"0deg\";\r\n  @HostBinding(\"style.--rightrotation\") rightrotation:string = \"0deg\";\r\n  @HostBinding(\"style.--blockerzindex\") blockerzindex:number = 5;\r\n  @HostBinding(\"style.--centercolor\") centercolor:string = \"\";\r\n  @HostBinding(\"style.--barcolor\") barcolor:string = \"\";\r\n  @HostBinding(\"style.--textcolor\") textcolor:string = \"\";\r\n  @HostBinding(\"style.--blockercolor\") blockercolor:string = \"\";\r\n  @HostBinding(\"style.--fadeindelay\") fadeInDelay:string = \"\";\r\n  @HostBinding(\"style.--fadeinduration\") fadeInDuration:string = \"\";\r\n\r\n  progress:string = \"\"\r\n\r\n  percentage:number = 0;\r\n  barAngle:number = 0;\r\n\r\n  increaseInterval = 20\r\n\r\n  ngOnInit(): void {\r\n    this.bindValues();\r\n    setTimeout(() => this.startAnimation(),this.barConfig.fadeInDelayS*1000);\r\n  }\r\n\r\n  private bindValues(){\r\n    this.centercolor = this.barConfig.centerColor;\r\n    this.barcolor = this.barConfig.barColor;\r\n    this.textcolor = this.barConfig.progressTextColor;\r\n    this.blockercolor = this.barConfig.backgroundColor;\r\n    this.fadeInDelay = this.barConfig.fadeInDelayS + \"s\";\r\n    this.fadeInDuration = this.barConfig.fadeInTimeS + \"s\";\r\n  }\r\n\r\n  private startAnimation(){\r\n    this.computeFrameTime();\r\n    setTimeout(() => this.runAnime(), this.barConfig.animationDelay*1000);\r\n  } \r\n\r\n  private runAnime() {\r\n    let interval = setInterval(() => {\r\n      if(this.percentage<this.barConfig.percentage){\r\n        this.percentage++;\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n      this.computeBarAngle(this.percentage);\r\n      this.setPercentage(this.percentage);\r\n      this.setBarAngle(this.barAngle);\r\n    },\r\n    this.increaseInterval)\r\n  }\r\n\r\n  private computeFrameTime(){\r\n    this.increaseInterval = (this.barConfig.animationTimeS/this.barConfig.percentage)*1000;\r\n  }\r\n\r\n  private computeBarAngle(percentage:number){\r\n    this.barAngle = percentage * 3.6;\r\n  }\r\n\r\n  private setPercentage(percentage:number){\r\n    this.progress = percentage + \"%\";\r\n  }\r\n\r\n  private setBarAngle(angle:number){\r\n    if(angle <= 360 && angle >= 0){\r\n      this.setAngle(angle)\r\n    }\r\n  }\r\n\r\n  private setAngle(angle:number){\r\n    if(this.barAngle <= 180){\r\n      this.moveLeftHalfCircle(angle);\r\n      this.moveRightHalfCircle(angle);\r\n      this.setRightVisible(false);\r\n    } else {\r\n      this.moveLeftHalfCircle(180);\r\n      this.moveRightHalfCircle(angle);\r\n      this.setRightVisible(true);\r\n    }\r\n  }\r\n\r\n  private moveLeftHalfCircle(angle:number){\r\n    this.leftrotation = angle + \"deg\";\r\n  }\r\n\r\n  private moveRightHalfCircle(angle:number){\r\n    this.rightrotation = angle + \"deg\";\r\n  }\r\n\r\n  private setRightVisible(visible:boolean){\r\n    if(visible){\r\n      this.blockerzindex = 2;\r\n    } else {\r\n      this.blockerzindex = 5;\r\n    }\r\n  }\r\n}\r\n","<div id=\"bar\">\r\n    <div id=\"background\"></div>\r\n    <div id=\"left_blocker\"></div>\r\n    <div id=\"right_blocker\"></div>\r\n    <div id=\"left\"></div>\r\n    <div id=\"right\"></div>\r\n    <div id=\"center\"></div>\r\n    <div id=\"text\">{{progress}}</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ViewportScroller } from '@angular/common';\nimport { MessageServiceService } from '../message-service/message-service.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private scroller:ViewportScroller, \n    private messageService:MessageServiceService) { }\n\n  ngOnInit(): void {}\n\n  model = \"home\";\n\n  home(){\n    this.messageService.send(\"intro button click\");\n    this.scroller.scrollToAnchor(\"intro\");\n  }\n\n  portfolio(){\n    this.messageService.send(\"portfolio button click\");\n    this.scroller.scrollToAnchor(\"portfolio\");\n  }\n\n  about(){\n    this.messageService.send(\"about button click\");\n    this.scroller.scrollToAnchor(\"about\");\n  }\n\n  contact(){\n    this.messageService.send(\"contact button click\");\n    this.scroller.scrollToAnchor(\"contact\");\n  }\n}\n","<div id=\"navbar\">\n    <div id=\"buttongroup\">\n        <button class=\"button\" (click)=\"home()\">Home</button>\n        <button class=\"button\" (click)=\"about()\">About</button>\n        <button class=\"button\" (click)=\"portfolio()\">Portfolio</button>\n        <button class=\"button\" (click)=\"contact()\">Contact</button>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Observable, of, pipe, Subject } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ContactDto } from '../models/contact-dto';\r\nimport { TokenStatus } from './message-models/token-status';\r\nimport { ActionService } from './sub-services/action.service';\r\nimport { ContactService } from './sub-services/contact.service';\r\nimport { TokenService } from './sub-services/token.service';\r\nimport { UrlService } from './sub-services/url.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageServiceService {\r\n\r\n  connectedStatus = new Subject<boolean>();\r\n\r\n  reconnectingAttempts = 30;\r\n  reconnectingDelayS = 10; \r\n\r\n  tokenStatus:TokenStatus = {status:false, token:\"\"}\r\n\r\n  constructor(private http:HttpClient,\r\n     private tokenService:TokenService,\r\n      private actionService:ActionService,\r\n      private contactService:ContactService) { }\r\n\r\n  startMessageService() {\r\n    this.actionService.start();\r\n    console.log(\"downloading token\");\r\n    this.tokenService.getToken().subscribe(status => this.analyzeStatus(status));\r\n    this.actionService.serviceStatus.subscribe(status => this.analyzeConnectionStatus(status));\r\n  }\r\n\r\n  downloadTokenOnly() {\r\n    this.tokenService.getToken().subscribe(status => this.analyzeStatus(status));\r\n  }\r\n\r\n  private analyzeStatus(status:TokenStatus){\r\n    this.tokenStatus = status;\r\n    if(this.tokenStatus.status){\r\n      this.startCommunicationProcesses();\r\n    } else {\r\n      this.tryToReconnect();\r\n    }\r\n  }\r\n\r\n  private analyzeConnectionStatus(status:boolean) {\r\n    if(!status){\r\n      this.tryToReconnect();\r\n    }\r\n  }\r\n\r\n  private startCommunicationProcesses() {\r\n    console.log(\"starting communication processes\");\r\n    this.actionService.setTokenStatus(this.tokenStatus);\r\n    this.contactService.setTokenStatus(this.tokenStatus);\r\n    this.connectedStatus.next(true);\r\n  }\r\n\r\n  private tryToReconnect() {\r\n    console.log(\"trying to reconnect\");\r\n    this.tokenStatus.status = false;\r\n    this.connectedStatus.next(false);\r\n    setTimeout(() => {\r\n      if(this.reconnectingAttempts > 0) {\r\n        this.reconnectingAttempts--;\r\n        this.executeReconnectingProcedure();\r\n      }\r\n      ;\r\n    },this.reconnectingDelayS*1000);\r\n  }\r\n\r\n  private executeReconnectingProcedure() {\r\n    this.tokenService.pingServer().subscribe(response => {\r\n      if(response){\r\n        this.downloadTokenOnly();\r\n      } else {\r\n        console.log(\"server responding but there is other problem, resetting token\")\r\n        this.tokenService.resetToken();\r\n        this.downloadTokenOnly();\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  public send(code:string) {\r\n    this.actionService.send(code);\r\n  }\r\n\r\n  public saveContact(contact:ContactDto):Observable<any> {\r\n    return new Observable(observer => {\r\n      this.contactService.saveContact(contact).subscribe(response => {\r\n        observer.next(response);\r\n        this.checkContactStatus(response);\r\n      });\r\n    })\r\n  }\r\n\r\n  private checkContactStatus(status:boolean) {\r\n    if(!status && this.tokenStatus.status){\r\n  \r\n    }\r\n  }\r\n}","import { Component, HostBinding, Input, OnInit } from '@angular/core';\r\nimport { MessageServiceService } from 'src/app/message-service/message-service.service';\r\nimport { BarConfig } from '../bar-config';\r\nimport { CardConfig } from '../card-config';\r\n\r\n@Component({\r\n  selector: 'app-card-circular-bar',\r\n  templateUrl: './card-circular-bar.component.html',\r\n  styleUrls: ['./card-circular-bar.component.css']\r\n})\r\nexport class CardCircularBarComponent implements OnInit {\r\n\r\n  @Input() cardConfig:CardConfig = {} as CardConfig;\r\n  barConfig:BarConfig = {} as BarConfig; \r\n  \r\n  constructor(private messageService:MessageServiceService) { }\r\n\r\n  description = \"\";\r\n\r\n  @HostBinding(\"style.--textcolor\") textColor:string=\"\";\r\n  @HostBinding(\"style.--card_color\") cardColor:string=\"\";\r\n  @HostBinding(\"style.--description_blur_anime_delay\") descriptionBlurAnimeDelay:string=\"\";\r\n  @HostBinding(\"style.--description_blur_anime_duration\") descriptionBlurAnimeDuration:string=\"\";\r\n  @HostBinding(\"style.--card_anime_delay\") cardAnimeDelay:string = \"\";\r\n  @HostBinding(\"style.--card_anime_duration\") cardAnimeDuration:string=\"\";\r\n\r\n  ngOnInit(): void {\r\n    this.barConfig = this.cardConfig.barConfig;\r\n\r\n    this.description = this.cardConfig.description;\r\n    this.textColor = this.cardConfig.textColor;\r\n    this.cardColor = this.cardConfig.cardColor;\r\n    this.descriptionBlurAnimeDelay = this.cardConfig.descriptionBlurAnimeDelay;\r\n    this.descriptionBlurAnimeDuration = this.cardConfig.descriptionBlurAnimeDuration;\r\n    this.cardAnimeDelay = this.cardConfig.cardAnimeDelay;\r\n    this.cardAnimeDuration = this.cardConfig.cardAnimeDuration;\r\n  }\r\n\r\n  send() {\r\n    this.messageService.send(\"skill card \" + this.cardConfig.description + \" hover\");\r\n  }\r\n}\r\n","<div id=\"card\" (mouseenter)=\"send()\">\r\n    <app-bar id=\"circular_bar\" [barConfig]=\"barConfig\"></app-bar>\r\n    <div id=\"description\">{{description}}</div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MessageServiceService } from '../message-service/message-service.service';\nimport { Card } from '../models/card';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() card:Card = {} as Card;\n  @Output() cardEmit = new EventEmitter<Card>();\n\n  constructor(private messageService:MessageServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  loadModal(){\n    this.messageService.send(\"opening card: \" + this.card.title);\n    this.cardEmit.emit(this.card);\n  }\n}\n","<div class=\"column\" id=\"card\">\n    <div id=\"mask\" class=\"screen\">\n        <div id=\"description\">\n            <p id=\"title\">{{card.title}}</p>\n            <p id=\"tech\">{{card.tech}}</p>\n            <a id=\"button\" class=\"btn btn-outline-danger myButton\" (click)=\"loadModal()\">Learn more</a>\n        </div>\n    </div>\n    <img src=\"{{card.imgUrl}}\" id=\"img\" class=\"screen\">\n</div>","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { MessageServiceService } from '../message-service/message-service.service';\r\nimport { Card } from '../models/card';\r\n\r\n@Component({\r\n  selector: 'app-card-block',\r\n  templateUrl: './card-block.component.html',\r\n  styleUrls: ['./card-block.component.css']\r\n})\r\nexport class CardBlockComponent implements OnInit {\r\n\r\n  @HostBinding(\"style.--modal_display\") modal = \"none\";\r\n\r\n  cards:Card[] = []\r\n  cards2:Card[] = []\r\n  cardModal:Card = {} as Card;\r\n\r\n  //modal Urls\r\n  imageUrl:string = \"\";\r\n  image2Url:string = \"\";\r\n  title:string = \"\";\r\n  description:string = \"\";\r\n  appUrl:string = \"\";\r\n  repoUrl:string = \"\";\r\n\r\n  constructor(private messageService:MessageServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.messageService.getToken()\r\n    let cardToDo = {\r\n      title:\"TodoApp\",\r\n      tech:\"Angular/Spring Boot\",\r\n      imgUrl:\"assets/images/todo/img1.jpg\",\r\n      img2Url:\"assets/images/todo/img2.jpg\",\r\n      description:\"This is the simplest application that I was able to use to learn proper full-stack development. When I started this app I knew nothing about front-end development so started from vanilla js. I quickly learned that programming client with vanilla js is quite pointless and moved to jquery. Jquery code quickly became quite chaotic. I was aware then that newer frameworks structure code better so I moved to Angular with typescript as the ultimate solution. This was an interesting course in the history of evolution in front-end development for me.\",\r\n      appUrl:\"https://morning-coast-72770.herokuapp.com/\",\r\n      appButton:true,\r\n      repoUrl:\"https://github.com/Luke1024/ToDo_fullStackApp\"\r\n    } as Card;\r\n\r\n    let cardTrading = {\r\n      title:\"TradingApp\",\r\n      tech:\"Angular/Spring Boot\",\r\n      imgUrl:\"assets/images/trading/img1.jpg\",\r\n      img2Url:\"assets/images/trading/img2.jpg\",\r\n      description:\"This app is my earlier project (https://github.com/Luke1024/financial-analytics) extremely simplified to actually make it possible to finish it in a reasonable time (or finish at all) and show it as a portfolio project. The idea for this app came to me naturally because I was engaged in trading earlier in my career. This app can simulate trading on the forex market on EUR/USD currency pair. App using external API to update EUR/USD exchange rate in real-time every 5 minutes (limits of free API) and using this data to compute profits and balance of accounts created by a user.\",\r\n      appUrl:\"https://protected-stream-68029.herokuapp.com/\",\r\n      appButton:true,\r\n      repoUrl:\"https://github.com/Luke1024/TradingApp\"\r\n    } as Card;\r\n\r\n    let cardDeveloper = {\r\n      title:\"This page\",\r\n      tech:\"Angular/Spring Boot\",\r\n      imgUrl:\"assets/images/page/img1.jpg\",\r\n      img2Url:\"assets/images/page/img2.jpg\",\r\n      description:\"This page is my first occasion for some fun in CSS and to try some styling. I caught some neumorphic vibe and tried to implement it. This is not the final version but I definitely will try to have more design fun with frontends instead of focusing only on basic functionality. This page has also some user tracking functionality. Yes, I could have used hotjar or google analytics but sometimes it's fun to implement something like this by myself.\",\r\n      appUrl:\"\",\r\n      appButton:false,\r\n      repoUrl:\"https://github.com/Luke1024/developer_page_in_angular\"\r\n    } as Card;\r\n\r\n    let cardCircularBar = {\r\n      title:\"Circular progress bar\",\r\n      tech:\"Angular\",\r\n      imgUrl:\"assets/images/bar/img1.jpg\",\r\n      img2Url:\"assets/images/bar/img2.jpg\",\r\n      description:\"This is what the name implies. Although it is also animated and configurable.\",\r\n      appUrl:\"\",\r\n      appButton:false,\r\n      repoUrl:\"https://github.com/Luke1024/Circular_progress_bar_in_angular\"\r\n    } as Card;\r\n\r\n    this.cards.push(cardDeveloper, cardTrading, cardToDo);\r\n    this.cards2.push(cardCircularBar);\r\n  }\r\n\r\n  send(){\r\n    this.messageService.send(\"projects hover\");\r\n  }\r\n\r\n  loadModal(card:Card){\r\n    this.cardModal = card;\r\n    this.messageService.send(\"closing modal: \" + this.cardModal.title);\r\n    this.modal = \"initial\";\r\n  }\r\n\r\n  closeModal(){\r\n    this.cardModal = {} as Card;\r\n    this.modal = \"none\";\r\n    this.messageService.send(\"\")\r\n  }\r\n}\r\n","<div id=\"background\" (mouseenter)=\"send()\">\r\n<div id=\"block\">\r\n    <h2 id=\"projects\">Projects:</h2>\r\n    <div class=\"container\" id=\"container\">\r\n        <div class=\"row\">\r\n            <div *ngFor=\"let card of cards\">\r\n                <app-card [card]=\"card\" (cardEmit)=\"loadModal($event)\"></app-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <h2 id=\"mprojects\">Mini projects:</h2>\r\n    <div class=\"container\" id=\"container2\">\r\n        <div class=\"row\">\r\n            <div *ngFor=\"let card of cards2\">\r\n                <app-card [card]=\"card\" (cardEmit)=\"loadModal($event)\"></app-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <app-card-modal id=\"modal\" [card]=\"cardModal\" (close)=\"closeModal()\"></app-card-modal>\r\n</div>\r\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n\n  storageKey = \"local_token\";\n  private rootUrl = \"http://localhost:8081/input\";\n  tokenUrl = this.rootUrl + \"/token\";\n  pulseUrl = this.rootUrl + \"/load\";\n  contactSaveUrl = this.rootUrl + \"/contact\";\n  pingUrl = this.rootUrl + \"/status\";\n\n  constructor() { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { observable, Observable, of, Subject } from 'rxjs';\nimport { ObserveOnOperator } from 'rxjs/internal/operators/observeOn';\nimport { catchError } from 'rxjs/operators';\nimport { StringDto } from 'src/app/models/string-dto';\nimport { TokenStatus } from '../message-models/token-status';\nimport { MessageServiceService } from '../message-service.service';\nimport { UrlService } from './url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(private http:HttpClient, private url:UrlService) { }\n\n  getToken():Observable<TokenStatus> {\n    return new Observable(observer => {\n    var token = localStorage.getItem(this.url.storageKey);\n    if(token == null){\n        this.http.get<StringDto>(this.url.tokenUrl, {observe:'response'})\n        .pipe(catchError(this.handleError<StringDto>(\"get token\")))\n        .subscribe(token => {\n          observer.next(this.checkToken(token));\n        })\n    } else {\n      observer.next({status:true, token:token});\n    }\n    })\n  }\n\n  pingServer():Observable<boolean> {\n    return new Observable(observer => {\n       this.http.get<boolean>(this.url.pingUrl, {observe:'response'})\n       .pipe(catchError(this.handleError<boolean>(\"get status\")))\n       .subscribe(response =>\n         observer.next(this.analyzePingResponse(response)));\n    })\n  }\n\n  private analyzePingResponse(response:any):boolean{\n    if(response != null){\n      if(response.status==200){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  resetToken() {\n    localStorage.clear();    \n  }\n\n  private checkToken(response:any):TokenStatus {\n    if(response != null){\n      var status = response.status\n      if(response.body != null){\n        if(status==200){\n          if(response.body?.message != null){\n            if(response.body.message.length == 15){\n              return {status:true, token:this.saveToken(response.body.message)} as TokenStatus\n            }\n          }\n        }\n      }\n    }\n    return {status:false, token:\"\"} as TokenStatus;\n  }\n\n  private saveToken(token:string) {\n    console.log(\"Setting token \" + token)\n    localStorage.setItem(this.url.storageKey, token);\n    return token;\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error + ` ${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}